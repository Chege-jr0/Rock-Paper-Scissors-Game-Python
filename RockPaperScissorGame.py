""" Rock, paper Scissors ia a game played typically by two people and there can be a tie but it is repeated until there ie one winner
    The game is similar to flipping a coin or drawing straws

    The rules followed include
    Rock beats scissors: A rock can crush or break scissors
    Scissors beats paper: Scissors can cut paper
    Paper beats rock: Paper covers the rock

    We are going to use this logic to build a game only that the user will play with a computer using the module random

      """
#We import the module random
import random


def get_user_choice():
    """ This function is for determining the users choice 
        I start off by creating a function that takes in the users choice 
        I also need to consider the fact the user might enter somethng that is not in the choices
        I also need to consider if the user will enter an netry with a spelling issue and thus convert the entry to lowrcase with the lower() function
        I used a list for the variable choice.
    """
    while True:
        choice = input("Rock, Paper, Scissors: go!: ").lower()
        if choice in ['rock','paper','scissors']:
            return choice
        print("Invalid Choice! Please enter a valid choice : rock, paper, scissors")


def get_computer_choice():
    """ This function is for determining the computers choice 
        The computers choice will be generated by the library module random
    """
    return random.choice(['rock', 'paper', 'scissors'])  


def determine_winner(user_choice, computer_choice):
    """ This function is for determining the winner 
    his is a function to try and determine the winner
    I used the if function to give outputs based on the condition
    If the user choice is equal to the computers choice then its a tie
    I used the f-operator to access the user choice and the computer choice
    I used a tuple to award points to the user or computer and its 0 0 for the 1st part


    For the else are cases where the computer wins
    I used the f-string to show the choices for clarity.
    It returns a tuple with the 0,1 to award points 
    """
    if user_choice == computer_choice:
        print(f"You both chose {get_user_choice}. Its a Tie")      
        return 0, 0
    elif(computer_choice == 'rock' and computer_choice == 'scissors') or \
        (user_choice == 'paper' and computer_choice == 'rock') or \
        (user_choice == 'scissors' and computer_choice == 'paper'):
        print(f"You chose {user_choice}, computer chose {computer_choice}. You win this round!")
        return 1, 0
    else:
        print(f"You chose {user_choice}, computer choice {computer_choice}. Computer wins this round!")
        return 0,1 

def main():
    """ Main function to start the game """ 
    print("Welcome to Rock, Paper, Scissors!")    
    #Getting the number of rounds from the user and printing the number of rounds 
    #The while loop checks if the user entered 3 or 5 and if not they are asked again
    #the rounds takes them as 3 or 5 and converts them to intergers
    while True:
        rounds =  input("Choose the number of rounds you would like to play(3 or 5): ")
        if rounds in ['3','5']:
            rounds =  int(rounds)
            break
        print("Please choose the number of rounds you would like to play(3 or 5).")
    #Declaring the variables user_score and computer_score and setting them to 0
    user_score = 0
    computer_score = 0
    max_points = 2 if rounds == 3 else 3

    #Iteration in the for loop lets say for 3 it iterates [1,2,3] for 5 it iterates[1,2,3,4,5]
    for round_num in range(1, rounds + 1):
        print(f"\nRound {round_num}")
     #for the function get user choice, it stores the value in user_choice and likewise for thr get_computer_choice   
        user_choice = get_user_choice()
        computer_choice = get_computer_choice()

     #the code below compares the choices, deterrmines the wiiner and returns a tuple  and then it is stored in the user_points and computeer_points   
        user_points, computer_points = determine_winner(user_choice, computer_choice)
        
        #The user points adds to the running total and likewise for the computer points
        user_score += user_points
        computer_score += computer_points
        print(f"You have scored: {user_score} and the Computer,s score is {computer_score} ")
      #The code below checks whether the user score or computer scoe has reached the maximum points
        if user_score >= max_points or computer_score >= max_points:
            print(f"Game Over! after {round_num} rounds!")
            break
#Declaring the final winner

    print("Final Score")
    print(f"You scored: {user_score} and the Computer scored: {computer_score}")
    if user_score > computer_score:
        print("Congratulations, you won the game!")
    elif computer_score > user_score:
        print("Computer won the game!")
    else:
        print("It,s a game!")
#This below is ana idiom that  controls when the main function is executed
#The condition if__name__ == "__main__" checks whether the current file is being run directly by the python interpreter
#if true the code inside the block executes and if false the code inside is skipped
if  __name__ == "__main__":
    main()

        

    

            

        